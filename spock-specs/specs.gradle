ext.displayName = "Spock Framework - Specs for Core Module"

description = "Spock specifications for the Core Module. Yes, we eat our own dog food."

apply plugin: "spock-base"

configurations {
  groovyConsole
  jacocoAgentRuntime
}

dependencies {
  compile libs.groovyJmx

  testCompile project(":spock-core")
  testCompile libs.groovySql  //for groovy.sql.Sql
  testCompile(libs.groovyTest) {  //for groovy.test.NotYetImplemented
    exclude group: 'junit'
  }

  testRuntime libs.asm
  testRuntime libs.bytebuddy
  testRuntime libs.cglib
  testRuntime libs.objenesis
  testRuntime libs.h2database

  groovyConsole groovyConsoleExtraDependencies
  jacocoAgentRuntime libs.jacocoAgent
}

sourceCompatibility = javaVersion
targetCompatibility = javaVersion

test {
  reports.junitXml.enabled = true
  reports.html.enabled = true

  testLogging.exceptionFormat = "full"
  testLogging.showExceptions = true
  testLogging.events 'standard_out'
  testLogging.events 'standard_error'
  maxParallelForks = 1
}

task groovyConsole(type: JavaExec) {
  main = variant == 2.5 ? "groovy.ui.Console" : "groovy.console.ui.Console"
  classpath = sourceSets.test.runtimeClasspath + configurations.groovyConsole
}

compileTestGroovy {
  def compileTestGroovyExec = "$buildDir/jacoco/compileTestGroovy.exec"
  groovyOptions.fork jvmArgs: ["-javaagent:${configurations.jacocoAgentRuntime.asPath}=destfile=$compileTestGroovyExec,dumponexit=false,append=false,jmx=true,includes=org.spockframework.*".toString()]
  outputs.file(compileTestGroovyExec)
}
