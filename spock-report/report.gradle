apply plugin: "spock-base"

ext.displayName = "Spock Framework - Report Module"

description = "Interactive, business-friendly HTML reports for Spock specifications."

dependencies {
  compile project(":spock-core")
  //compile "com.github.jknack:handlebars:0.7.0"
  //compile "com.fasterxml.jackson.core:jackson-core:2.1.2"
  // "com.fasterxml.jackson.core:jackson-databind:2.1.2"
}

jar {
  manifest {
    attributes(
      'Created-By': "${System.properties['java.version']} (${System.properties['java.vendor']} ${System.properties['java.vm.version']})".toString(),
      'Build-Date': buildDate,
      'Build-Time': buildTime,
      'Build-Revision': versioning.info.commit,
      'Specification-Title': project.name,
      'Specification-Version': baseVersion,
      'Specification-Vendor': 'spockframework.org',
      'Implementation-Title': project.name,
      'Implementation-Version': variantLessVersion,
      'Implementation-Vendor': 'spockframework.org',
      'Automatic-Module-Name': 'org.spockframework.report'
    )
  }
}

test {
  exclude "org/spockframework/report/sample/ParameterizedFightSpec.class"
  exclude "org/spockframework/report/sample/FightOrFlightStory.class"
  exclude "org/spockframework/report/sample/FightOrFlightSpec.class"
}

ext.spockLogFileDir = file("$buildDir/spock/logFiles")
ext.spockLogFileName = "spock-log"

task sampleTest(type: Test) {
  finalizedBy "sampleReport"
  reports.junitXml.enabled = false
  reports.html.enabled = false

  testClassesDirs = test.testClassesDirs
  classpath = test.classpath
  include "org/spockframework/report/sample/ParameterizedFightSpec.class"
  include "org/spockframework/report/sample/FightOrFlightStory.class"
  include "org/spockframework/report/sample/FightOrFlightSpec.class"
  testLogging.exceptionFormat = "full"
  testLogging.showExceptions = true
  maxParallelForks = 1

  systemProperty "spock.logFileDir", spockLogFileDir
  systemProperty "spock.logFileName", spockLogFileName

  doFirst {
    delete spockLogFileDir
  }
}

task sampleReport(type: org.spockframework.gradle.GenerateSpockReport) {
  reportName = "Ninja Commander"
  reportFileName = "ninja.html"
  debug = true
  local = true
  liveLogFiles = (1..10).collect { file("$spockLogFileDir/$spockLogFileName-$it") }
  spockReportClasspath = sourceSets.main.runtimeClasspath
  outputDirectory = file("$buildDir/spock/reports/")
}
