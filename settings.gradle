import com.gradle.enterprise.gradleplugin.internal.extension.BuildScanExtensionWithHiddenFeatures

pluginManagement {
  repositories {
    mavenCentral()
    gradlePluginPortal()
  }

  plugins {
    id "com.gradle.develocity" version "3.18.2"
    id "com.gradle.common-custom-user-data-gradle-plugin" version "2.0.2"
    id "org.asciidoctor.jvm.convert" version "4.0.3"
    id "net.nemerosa.versioning" version "3.1.0"
    id "io.github.gradle-nexus.publish-plugin" version "2.0.0"
    id "com.github.ben-manes.versions" version "0.51.0"
    id "biz.aQute.bnd.builder" version "7.0.0"
    id "io.spring.nohttp" version "0.0.11"
  }
}

plugins {
  id "com.gradle.develocity"
  id "com.gradle.common-custom-user-data-gradle-plugin"
}

dependencyResolutionManagement {
  repositories {
    mavenCentral()
  }
}

if (!JavaVersion.current().isCompatibleWith(JavaVersion.VERSION_17)) {
  throw new InvalidUserDataException("The spock build needs to be run with JDK 17 or higher, but was: ${JavaVersion.current()}")
}


def develocityServer = "https://ge.spockframework.org"
def isCiServer = System.env["CI"] || System.env["GITHUB_ACTIONS"]

def accessKeysAreMissing() {
  return !(System.env['DEVELOCITY_ACCESS_KEY']?.trim())
}

develocity {
  buildScan {
    uploadInBackground = !isCiServer


    if (gradle.startParameter.buildScan || (isCiServer && accessKeysAreMissing())) {
      termsOfUseUrl = "https://gradle.com/help/legal-terms-of-use"
    } else {
      server = develocityServer
      publishing.onlyIf {  it.authenticated }
      }

    if (isCiServer) {
      termsOfUseAgree = "yes"
    }

    obfuscation {
      if (isCiServer) {
        username { "github" }
      } else {
        hostname { null }
        ipAddresses { [] }
      }
    }
  }
}

buildCache {
  local {
    enabled = !isCiServer
  }
  if (gradle.startParameter.buildScan || (isCiServer && accessKeysAreMissing())) {
    remote(HttpBuildCache) {
      url = uri("$develocityServer/cache/")
      push = false
    }
  } else {
    remote(develocity.buildCache) {
      push = isCiServer
    }
  }
}

enableFeaturePreview("TYPESAFE_PROJECT_ACCESSORS")

includeBuild "build-logic"
include "spock-bom"
include "spock-core"
include "spock-specs"
include "spock-specs:mock-integration"
include "spock-spring"
include "spock-guice"
include "spock-junit4"
include "spock-testkit"

def variant = System.getProperty("variant") as BigDecimal ?: 2.5
def javaVersion = (System.getProperty("javaVersion") ?: 8) as int

if (variant == 2.5) {
  //Remove once Groovy 2.5 support is dropped
  include "spock-groovy2-compat"
} else {
  // require Java 17 which isn't supported by Groovy 2.5
  include "spock-spring:boot3-test"
  include "spock-spring:spring6-test"
}

// https://issues.apache.org/jira/projects/TAP5/issues/TAP5-2588
if (javaVersion == 8) {
  include "spock-tapestry"
}

include "spock-unitils"

if (javaVersion <= 17) {
  include "spock-spring:boot2-test"
}
include "spock-spring:spring3-test"
include "spock-spring:spring5-test"

rootProject.name = "spock"
nameBuildScriptsAfterProjectNames(rootProject.children)

def nameBuildScriptsAfterProjectNames(projects) {
  for (prj in projects) {
    prj.buildFileName = prj.name + ".gradle" - "spock-"
    nameBuildScriptsAfterProjectNames(prj.children)
  }
}
