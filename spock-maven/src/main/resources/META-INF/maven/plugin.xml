<?xml version="1.0" encoding="UTF-8"?>
<plugin>
  <description></description>
  <groupId>org.spockframework</groupId>
  <artifactId>spock-maven</artifactId>
  <version>0.7-groovy-1.8-SNAPSHOT</version>
  <goalPrefix>spock</goalPrefix>
  <isolatedRealm>false</isolatedRealm>
  <inheritedByDefault>true</inheritedByDefault>
  <mojos>
    <mojo>
      <goal>find-specs</goal>
      <description>Plugin that auto-detects and runs all Spock specs in a Maven project.
Specs are run by adding them as &amp;lt;include&amp;gt;&apos;s to Surefire&apos;s
configuration. Unless &lt;tt&gt;overrideSurefireIncludes&lt;/tt&gt; is set to &lt;tt&gt;true&lt;/tt&gt;,
Surefire&apos;s default includes or any explicit &amp;lt;include&amp;gt;&apos;s overriding
those defaults will remain intact. This means that Spock specs will get run
together with all other JUnit-based tests that would get run without this
plugin being present.

&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt;This plugin is &lt;em&gt;not&lt;/em&gt; required for using Spock
together with Maven; it merely adds some advanced capabilities like auto-
detection of specs. If you decide not to use this plugin, make sure that your
spec classes conform to Surefire&apos;s naming conventions. By default, these are
&amp;#42;&amp;#42;/Test&amp;#42;.java, &amp;#42;&amp;#42;/&amp;#42;Test.java, and &amp;#42;&amp;#42;/&amp;#42;TestCase.java.</description>
      <requiresDirectInvocation>false</requiresDirectInvocation>
      <requiresProject>true</requiresProject>
      <requiresReports>false</requiresReports>
      <aggregator>false</aggregator>
      <requiresOnline>false</requiresOnline>
      <inheritedByDefault>true</inheritedByDefault>
      <phase>process-test-classes</phase>
      <implementation>org.spockframework.buildsupport.maven.FindSpecsMojo</implementation>
      <language>java</language>
      <instantiationStrategy>per-lookup</instantiationStrategy>
      <executionStrategy>once-per-session</executionStrategy>
      <parameters>
        <parameter>
          <name>optimizeRunOrder</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>If &lt;tt&gt;true&lt;/tt&gt; the run order of spec &lt;em&gt;classes&lt;/em&gt; will be
optimized such that frequently failing specs are run first. Note
that this requires all specs to be wrapped with a dynamically
generated JUnit suite, which may have a negative impact on test
reporting.</description>
        </parameter>
        <parameter>
          <name>overrideSurefireIncludes</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>If &lt;tt&gt;true&lt;/tt&gt;, any existing Surefire &amp;lt;include&amp;gt;&apos;s will
be overridden to make sure that only Spock specs will get run.</description>
        </parameter>
        <parameter>
          <name>project</name>
          <type>org.apache.maven.project.MavenProject</type>
          <required>false</required>
          <editable>true</editable>
          <description></description>
        </parameter>
        <parameter>
          <name>skip</name>
          <type>boolean</type>
          <required>false</required>
          <editable>true</editable>
          <description>If &lt;tt&gt;true&lt;/tt&gt;, the execution of this plugin will be skipped.</description>
        </parameter>
        <parameter>
          <name>surefireExecutionId</name>
          <type>java.lang.String</type>
          <required>false</required>
          <editable>true</editable>
          <description>If non-null, &amp;lt;include&amp;gt;&apos;s for Spock specs will be added to the
configuration of the specified Surefire execution. Otherwise, they
will be added to the global Surefire configuration.</description>
        </parameter>
        <parameter>
          <name>testOutputDirectory</name>
          <type>java.io.File</type>
          <required>false</required>
          <editable>true</editable>
          <description></description>
        </parameter>
      </parameters>
      <configuration>
        <surefireExecutionId implementation="java.lang.String">${findspecs.surefireExecutionId}</surefireExecutionId>
        <project implementation="org.apache.maven.project.MavenProject">${project}</project>
        <overrideSurefireIncludes implementation="boolean">${findspecs.overrideSurefireIncludes}</overrideSurefireIncludes>
        <skip implementation="boolean">${findspecs.skip}</skip>
        <optimizeRunOrder implementation="boolean">${findspecs.optimizeRunOrder}</optimizeRunOrder>
        <testOutputDirectory implementation="java.io.File">${project.build.testOutputDirectory}</testOutputDirectory>
      </configuration>
      <requirements>
        <requirement>
          <role>org.apache.maven.execution.RuntimeInformation</role>
          <field-name>runtimeInformation</field-name>
        </requirement>
      </requirements>
    </mojo>
  </mojos>
  <dependencies>
    <dependency>
      <groupId>org.spockframework</groupId>
      <artifactId>spock-core</artifactId>
      <type>jar</type>
      <version>0.7-groovy-1.8-SNAPSHOT</version>
    </dependency>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit-dep</artifactId>
      <type>jar</type>
      <version>4.9</version>
    </dependency>
    <dependency>
      <groupId>org.hamcrest</groupId>
      <artifactId>hamcrest-core</artifactId>
      <type>jar</type>
      <version>1.2</version>
    </dependency>
    <dependency>
      <groupId>org.codehaus.groovy</groupId>
      <artifactId>groovy-all</artifactId>
      <type>jar</type>
      <version>1.8.6</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-plugin-api</artifactId>
      <type>jar</type>
      <version>2.0</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-project</artifactId>
      <type>jar</type>
      <version>2.0</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-profile</artifactId>
      <type>jar</type>
      <version>2.0</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-model</artifactId>
      <type>jar</type>
      <version>2.0</version>
    </dependency>
    <dependency>
      <groupId>org.codehaus.plexus</groupId>
      <artifactId>plexus-utils</artifactId>
      <type>jar</type>
      <version>1.5.7</version>
    </dependency>
    <dependency>
      <groupId>org.codehaus.plexus</groupId>
      <artifactId>plexus-container-default</artifactId>
      <type>jar</type>
      <version>1.0-alpha-8</version>
    </dependency>
    <dependency>
      <groupId>classworlds</groupId>
      <artifactId>classworlds</artifactId>
      <type>jar</type>
      <version>1.1-alpha-2</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-artifact-manager</artifactId>
      <type>jar</type>
      <version>2.0</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-repository-metadata</artifactId>
      <type>jar</type>
      <version>2.0</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-artifact</artifactId>
      <type>jar</type>
      <version>2.0</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven.wagon</groupId>
      <artifactId>wagon-provider-api</artifactId>
      <type>jar</type>
      <version>1.0-alpha-5</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-core</artifactId>
      <type>jar</type>
      <version>2.0</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-settings</artifactId>
      <type>jar</type>
      <version>2.0</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven.wagon</groupId>
      <artifactId>wagon-file</artifactId>
      <type>jar</type>
      <version>1.0-alpha-5</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-plugin-parameter-documenter</artifactId>
      <type>jar</type>
      <version>2.0</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven.wagon</groupId>
      <artifactId>wagon-http-lightweight</artifactId>
      <type>jar</type>
      <version>1.0-alpha-5</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven.reporting</groupId>
      <artifactId>maven-reporting-api</artifactId>
      <type>jar</type>
      <version>2.0</version>
    </dependency>
    <dependency>
      <groupId>doxia</groupId>
      <artifactId>doxia-sink-api</artifactId>
      <type>jar</type>
      <version>1.0-alpha-4</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-error-diagnostics</artifactId>
      <type>jar</type>
      <version>2.0</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-plugin-registry</artifactId>
      <type>jar</type>
      <version>2.0</version>
    </dependency>
    <dependency>
      <groupId>commons-cli</groupId>
      <artifactId>commons-cli</artifactId>
      <type>jar</type>
      <version>1.0</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-plugin-descriptor</artifactId>
      <type>jar</type>
      <version>2.0</version>
    </dependency>
    <dependency>
      <groupId>org.codehaus.plexus</groupId>
      <artifactId>plexus-interactivity-api</artifactId>
      <type>jar</type>
      <version>1.0-alpha-4</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven</groupId>
      <artifactId>maven-monitor</artifactId>
      <type>jar</type>
      <version>2.0</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven.wagon</groupId>
      <artifactId>wagon-ssh</artifactId>
      <type>jar</type>
      <version>1.0-alpha-5</version>
    </dependency>
    <dependency>
      <groupId>com.jcraft</groupId>
      <artifactId>jsch</artifactId>
      <type>jar</type>
      <version>0.1.23</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven.surefire</groupId>
      <artifactId>surefire-junit47</artifactId>
      <type>jar</type>
      <version>2.11</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven.surefire</groupId>
      <artifactId>common-junit48</artifactId>
      <type>jar</type>
      <version>2.11</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven.surefire</groupId>
      <artifactId>common-junit4</artifactId>
      <type>jar</type>
      <version>2.11</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven.surefire</groupId>
      <artifactId>common-junit3</artifactId>
      <type>jar</type>
      <version>2.11</version>
    </dependency>
    <dependency>
      <groupId>org.apache.maven.surefire</groupId>
      <artifactId>surefire-api</artifactId>
      <type>jar</type>
      <version>2.11</version>
    </dependency>
    <dependency>
      <groupId>asm</groupId>
      <artifactId>asm</artifactId>
      <type>jar</type>
      <version>3.2</version>
    </dependency>
  </dependencies>
</plugin>