name: 'Build and Release Spock'

on:
  push:
    branches:
      - master
    tags:
      - 'spock-*'

jobs:
  build-and-verify:
    runs-on: ${{ matrix.os }}
    if: github.repository == 'spockframework/spock'
    strategy:
      fail-fast: false
      matrix:
        os: [ 'ubuntu-latest' ]
        variant: [ '2.5', '3.0' ]
        java: [ '8', '11', '17' ]
        exclude:
          - os: 'ubuntu-latest'
            variant: '2.5'
            java: '17'
        include:
          - os: 'windows-latest'
            variant: '2.5'
            java: '8'
          - os: 'windows-latest'
            variant: '3.0'
            java: '8'
          - os: 'macos-latest'
            variant: '2.5'
            java: '8'
          - os: 'macos-latest'
            variant: '3.0'
            java: '8'
    steps:
      - uses: actions/checkout@v2
        with:
          # Codecov needs fetch-depth > 1
          fetch-depth: 2
      - name: 'Set up JDK ${{ matrix.java }}'
        uses: actions/setup-java@v2
        if: matrix.java != 8
        with:
          distribution: 'adopt'
          java-version: ${{ matrix.java }}
      - name: 'Prepare JDK${{ matrix.java }} env var'
        shell: bash
        run: echo "JDK${{ matrix.java }}=$JAVA_HOME" >> $GITHUB_ENV
      - name: 'Set up JDK 8'
        uses: actions/setup-java@v2
        with:
          cache: 'gradle'
          distribution: 'adopt'
          java-version: 8
      - name: Prepare JDK8 env var
        shell: bash
        run: echo "JDK8=$JAVA_HOME" >> $GITHUB_ENV
      - name: 'Gradle Version'
        run: |
          ./gradlew --version
      - name: 'Build Spock'
        env:
          ORG_GRADLE_PROJECT_spockBuildCacheUsername: ${{ secrets.SPOCK_BUILD_CACHE_USERNAME }}
          ORG_GRADLE_PROJECT_spockBuildCachePassword: ${{ secrets.SPOCK_BUILD_CACHE_PASSWORD }}
          GRADLE_ENTERPRISE_ACCESS_KEY: ${{ secrets.GRADLE_ENTERPRISE_ACCESS_KEY }}
        run: |
          ./gradlew --no-parallel --stacktrace ghActionsBuild "-Dvariant=${{ matrix.variant }}" "-DjavaVersion=${{ matrix.java }}"  "-Dscan.tag.main-build"
      - name: 'Stop Daemon'
        run: |
          ./gradlew --stop
      - name: 'Upload to Codecov.io'
        uses: codecov/codecov-action@v2

  release-spock:
    runs-on: ${{ matrix.os }}
    needs: [ 'build-and-verify' ]
    # Use always() and check needs result manually since we skip the 'build-and-verify' execution on a tag,
    # but still want to depend on it on the main branch
    strategy:
      matrix:
        os: [ 'ubuntu-latest' ]
        variant: [ '2.5', '3.0' ]   # publish needs to be done for both versions
        java: [ '8' ]               # publish needs the min supported java version
    steps:
      - uses: actions/checkout@v2
      - name: 'Set up JDK ${{ matrix.java }}'
        uses: actions/setup-java@v2
        if: matrix.java != 8
        with:
          distribution: 'adopt'
          java-version: ${{ matrix.java }}
      - name: 'Prepare JDK${{ matrix.java }} env var'
        shell: bash
        run: echo "JDK${{ matrix.java }}=$JAVA_HOME" >> $GITHUB_ENV
      - name: 'Set up JDK 8'
        uses: actions/setup-java@v2
        with:
          cache: 'gradle'
          distribution: 'adopt'
          java-version: 8
      - name: Prepare JDK8 env var
        shell: bash
        run: echo "JDK8=$JAVA_HOME" >> $GITHUB_ENV
      - name: 'Gradle Version'
        run: |
          ./gradlew --version
      - name: 'Publish Spock'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONATYPE_OSS_USER: ${{ secrets.SONATYPE_OSS_USER }}
          SONATYPE_OSS_PASSWORD: ${{ secrets.SONATYPE_OSS_PASSWORD }}
          SIGNING_PASSWORD: ${{ secrets.SIGNING_GPG_PASSWORD }}
          ORG_GRADLE_PROJECT_spockBuildCacheUsername: ${{ secrets.SPOCK_BUILD_CACHE_USERNAME }}
          ORG_GRADLE_PROJECT_spockBuildCachePassword: ${{ secrets.SPOCK_BUILD_CACHE_PASSWORD }}
          GRADLE_ENTERPRISE_ACCESS_KEY: ${{ secrets.GRADLE_ENTERPRISE_ACCESS_KEY }}
        run: |
          ./gradlew --no-parallel --stacktrace ghActionsPublish "-Dvariant=${{ matrix.variant }}" "-DjavaVersion=${{ matrix.java }}"  "-Dscan.tag.main-publish"
      - name: 'Stop Daemon'
        run: |
          ./gradlew --stop

  publish-release-docs:
    runs-on: ${{ matrix.os }}
    needs: ['release-spock']
    strategy:
      matrix:
        os: ['ubuntu-latest']
        variant: ['3.0']      # docs need the highest variant
        java: ['17']          # docs need the highest java version
    steps:
      - uses: actions/checkout@v2
      - name: 'Set up JDK ${{ matrix.java }}'
        uses: actions/setup-java@v2
        if: matrix.java != 8
        with:
          distribution: 'adopt'
          java-version: ${{ matrix.java }}
      - name: 'Prepare JDK${{ matrix.java }} env var'
        shell: bash
        run: echo "JDK${{ matrix.java }}=$JAVA_HOME" >> $GITHUB_ENV
      - name: 'Set up JDK 8'
        uses: actions/setup-java@v2
        with:
          cache: 'gradle'
          distribution: 'adopt'
          java-version: 8
      - name: Prepare JDK8 env var
        shell: bash
        run: echo "JDK8=$JAVA_HOME" >> $GITHUB_ENV
      - name: 'Gradle Version'
        run: |
          ./gradlew --version
      - name: 'Publish Docs'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          ORG_GRADLE_PROJECT_spockBuildCacheUsername: ${{ secrets.SPOCK_BUILD_CACHE_USERNAME }}
          ORG_GRADLE_PROJECT_spockBuildCachePassword: ${{ secrets.SPOCK_BUILD_CACHE_PASSWORD }}
          GRADLE_ENTERPRISE_ACCESS_KEY: ${{ secrets.GRADLE_ENTERPRISE_ACCESS_KEY }}
        run: |
          ./gradlew --no-parallel --stacktrace ghActionsDocs "-Dvariant=${{ matrix.variant }}" "-DjavaVersion=${{ matrix.java }}" "-Dscan.tag.main-docs"
      - name: 'Stop Daemon'
        run: |
          ./gradlew --stop
