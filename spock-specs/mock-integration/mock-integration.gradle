ext.displayName = "Spock Framework - Integration Specs for Mocking"

description = "Integration Specs for Mocking"

configurations {
  cglib
  bytebuddy
  objenesis
}

dependencies {
  testCompile(project(":spock-core")) {
    exclude group: "cglib"
    exclude group: "net.bytebuddy"
    exclude group: "org.objenesis"
  }
  cglib libs.cglib
  bytebuddy libs.bytebuddy
  objenesis libs.objenesis
}

def codeGenerationLibraries = [
  cglib: configurations.cglib,
  ByteBuddy: configurations.bytebuddy
]

codeGenerationLibraries.each { key, config ->
  tasks.create("test${key.capitalize()}WithoutObjenesis", Test) {
    systemProperty("org.spockframework.mock.testType", "${key.toLowerCase()} - objenesis")
    classpath += config
  }
  tasks.create("test${key.capitalize()}WithObjenesis", Test) {
    systemProperty("org.spockframework.mock.testType", "${key.toLowerCase()} + objenesis")
    classpath += config
    classpath += configurations.objenesis
  }
}

check.dependsOn(tasks.withType(Test))
